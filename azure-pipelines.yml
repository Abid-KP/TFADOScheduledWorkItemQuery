# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml


schedules:
- cron: "43 19 * * *"  # This cron expression triggers the pipeline at 7:30 PM every day
  displayName: Daily 7:30 PM build 
  branches:
    include:
    - '*'
pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world! zainul abid
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Define your Azure DevOps organization URL and personal access token (PAT)
      $organizationUrl = "https://dev.azure.com/afiqdes"
      $pat = "pircqfxw7y6f2mpr2dm6lnkq6bapbwydw2cecwryoxf4ulub3pha"

      # Define the query ID of your shared work item query
      $queryId = "cbbc27e4-0916-4282-b8ef-25fe78a232bb"

      # Construct the REST API URL for querying work items
      $url = "$organizationUrl/_apis/wit/queries/$queryId?api-version=7.1"

      # Invoke the REST API to execute the query
      $workItemsResponse = Invoke-RestMethod -Uri $url -Method Get -Headers @{Authorization=("Basic {0}" -f [Convert]::ToBase64String([Text.Encoding]::ASCII.GetBytes(":$($pat)")))}
      
      # Extract work item details from the response
      $workItems = $workItemsResponse.workItems | Select-Object -ExpandProperty id

      # Output the IDs of the work items returned by the query
      Write-Output "Work Items Returned by the Query:"
      $workItems | ForEach-Object {
          Write-Output $_
      }
  displayName: 'Query Shared Work Items'
